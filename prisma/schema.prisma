generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  TRAINER
  USER
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String   @unique
  password String
  image    String?
  role     Role     @default(USER)
  clients  Client[] @relation("ClientsOfTrainer")
}

model Client {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  phoneNumber String? @unique
  trainerId   String  @db.ObjectId
  trainer     User    @relation("ClientsOfTrainer", fields: [trainerId], references: [id])
}

model Workout {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  startTime    DateTime
  endTime      DateTime
  muscleGroups MuscleGroup[]
  exercises    Exercise[]
}

model Exercise {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  nameOfExercise String
  sets           Int
  repetitions    Int[]
  workout        Workout?      @relation(fields: [workoutId], references: [id])
  workoutId      String?       @db.ObjectId
  muscleGroupIDs String[]      @db.ObjectId
  muscleGroups   MuscleGroup[] @relation(fields: [muscleGroupIDs], references: [id])
}

model MuscleGroup {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  workout     Workout?   @relation(fields: [workoutId], references: [id])
  workoutId   String?    @db.ObjectId
  exerciseIDs String[]   @db.ObjectId
  exercises   Exercise[] @relation(fields: [exerciseIDs], references: [id])
}
