generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  TRAINER
  USER
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String    @unique
  password String
  image    String?
  height   Int?
  weight   Float?
  role     Role      @default(USER)
  goals    Goal[]    @relation("userGoals")
  workouts Workout[] @relation("userWorkouts")
  clients  Client[]  @relation("clientsOfTrainer")
}

model Client {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  phoneNumber String?   @unique
  height      Int
  weight      Float
  workouts    Workout[] @relation("clientWorkouts")
  goals       Goal[]
  trainerId   String    @db.ObjectId
  trainer     User      @relation("clientsOfTrainer", fields: [trainerId], references: [id])
}

model Workout {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  startTime    DateTime
  endTime      DateTime
  muscleGroups MuscleGroup[]
  exercises    Exercise[]
  user         User?         @relation("userWorkouts", fields: [userId], references: [id])
  userId       String?       @db.ObjectId
  clientId     String?       @db.ObjectId
  client       Client?       @relation("clientWorkouts", fields: [clientId], references: [id])
}

model Exercise {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  nameOfExercise String
  sets           Int
  repetitions    Int[]
  weights        Float[]
  workout        Workout?      @relation(fields: [workoutId], references: [id])
  workoutId      String?       @db.ObjectId
  muscleGroupIDs String[]      @db.ObjectId
  muscleGroups   MuscleGroup[] @relation(fields: [muscleGroupIDs], references: [id])
}

model MuscleGroup {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  workout     Workout?   @relation(fields: [workoutId], references: [id])
  workoutId   String?    @db.ObjectId
  exerciseIDs String[]   @db.ObjectId
  exercises   Exercise[] @relation(fields: [exerciseIDs], references: [id])
}

model Goal {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  value    String
  userId   String? @db.ObjectId
  user     User?   @relation("userGoals", fields: [userId], references: [id])
  client   Client? @relation(fields: [clientId], references: [id])
  clientId String? @db.ObjectId
}
